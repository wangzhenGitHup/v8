/*
 * Copyright (C) Huawei Technologies Co., Ltd. 2018-2020. All rights reserved.
 * Description: Add interfaces for signal.
 * Author: Huawei OS Kernel Lab
 * Create: Mon Dec 10 20:33:34 2018
 */

/*
 * To support the mixed data model which means the client and the server
 * may use different data model. See the comment for limitation of data type
 * used in the sysif interfaces in <libsysif/base/api.h>.
 */
#ifdef SYSIF_EXPORT_API
#include <libhmsrv_sys/hm_signal.h>
/* For the user to set siginfo_t struct */
struct siginfo_set {
	int si_code;
};

#define SIGNAL_GET_SIGMASK		(0)
#define SIGNAL_SET_SIGMASK		(1)
#define SIGNAL_GETSET_SIGMASK		(2)
#define SIGNAL_SET_SIGMASK_RESTART	(3)

/*
 * This error code is used exclusively by set_sigmask,
 * a positive number is used here to distinguish it from the kernel.
 * Because actvcall_hmcall_signal_restore should return retval with unsigned long type.
 */
#define SIGNAL_RESTORE_INVALID	(1UL)
#endif

DEFINE_MANAGER(signal, 32,
	DEFINE_METHOD(signal, kill,
		      ARG(3, int, pid, int, signum, struct siginfo_set, sig_set),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, tkill,
		      ARG(3, int, tid, int, signum, struct siginfo_set, sig_set),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, tgkill,
		      ARG(3, int, tgid, int, tid, int, signum),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, sigqueue,
		      ARG(3, int, tgid, struct __siginfo, siginfo, int, signum),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, pthread_sigqueue,
		      ARG(4, int, tgid, int, tid, int, signum, struct __siginfo, siginfo),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, set_signal_handler,
		      ARG(2, enum hm_sigaction_flag, flag, int, signum),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, read_signalfd,
		      ARG(4, unsigned long long, sigmask, unsigned int, flags,
			  void *, buf, size_t, buf_size),
		      RET(1, long long, nread),
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, read_signalevents,
		      ARG(1, unsigned long long, sigmask),
		      RET(1, unsigned int, revents),
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, epoll_ctrl,
		      ARG(3, int, sigfd, unsigned long long, sigmask, int, op),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, init,
		      ARG(1, unsigned long, sigentry),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, set_sigmask,
		      ARG(2, unsigned long, ops, unsigned long long, new_mask),
		      RET(1, unsigned long long, old_mask),
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, get_pending_signal,
		      ARG_NO,
		      RET(1, unsigned long long, pending_signal),
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, drop_pending_signal,
		      ARG(1, unsigned long long, sigmask),
		      RET(1, struct __siginfo, siginfo),
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, set_sigstack,
		      ARG(1, struct sigstack, new_stack),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, set_sigaction_mask,
		      ARG(3, unsigned int, signum, unsigned long long, sigactionmask, int, altstack_flag),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(signal, timedwait,
		      ARG(4, unsigned long long, sigset, bool, set_timeout, time_t, tv_sec, long, tv_nsec),
		      RET(1, struct __siginfo, siginfo),
		      SLOWDATA_NO)
	DEFINE_METHOD_ULONG(signal, restore,
			    ARG(3, unsigned long long, sigmask, unsigned long, uctx_addr, unsigned int, uctx_size),
			    RET_NO,
			    SLOWDATA_NO)
)
