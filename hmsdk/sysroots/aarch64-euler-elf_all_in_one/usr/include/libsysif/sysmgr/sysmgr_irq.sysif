/*
 * Copyright (C) Huawei Technologies Co., Ltd. 2018-2020. All rights reserved.
 * Description: Generate irqmgr sysif client interface
 * Author: Huawei OS Kernel Lab
 * Create: Thu Jan 03 17:03:25 2019
 */

/*
 * To support the mixed data model which means the client and the server
 * may use different data model. See the comment for limitation of data type
 * used in the sysif interfaces in <libsysif/base/api.h>.
 */
#ifdef SYSIF_EXPORT_API
#include <hmkernel/capability.h>

/* current irqmgr only support max length 8 of hwconf */
#define IRQMGR_HWCONF_LEN_MAX	8U

struct irqmgr_version {
	char major;
	char minor;
	char patch;
	char build;
};

struct irqmgr_to_logic_arg {
	unsigned int hwconf[IRQMGR_HWCONF_LEN_MAX];
	unsigned int hwconf_len;
};

struct irqmgr_grant_arg {
	int irqctrl_id;
	rref_t irqctrl_rref;
	unsigned int logic_irq;
};

struct irqmgr_stat_arg {
	char name[IRQCTRL_NAME_LEN];
	struct bunch_ipc_attr attr;
};

#endif

DEFINE_MANAGER(irq, 16,
	DEFINE_SIMPLE_METHOD(irq, grant_ctrl,
			     ARG(1, struct irqmgr_grant_arg, arg),
			     RET_NO,
			     SLOWDATA_NO)
	DEFINE_SIMPLE_METHOD(irq, default_phyctrl_id,
			     ARG_NO,
			     RET_NO,
			     SLOWDATA_NO)
	DEFINE_SIMPLE_METHOD(irq, to_logic,
			     ARG(3, int, irqctrl_id,
				 struct irqmgr_to_logic_arg, arg,
				 unsigned int, cpuid),
			     RET_NO,
			     SLOWDATA_NO)
	DEFINE_SIMPLE_METHOD(irq, revoke_ctrl,
			     ARG(2, int, irqctrl_id,
				 unsigned int, logic_irq),
			     RET_NO,
			     SLOWDATA_NO)
	DEFINE_SIMPLE_METHOD(irq, version_get,
			     ARG_NO,
			     RET(1, struct irqmgr_version, version),
			     SLOWDATA_NO)
	DEFINE_SIMPLE_METHOD(irq, version_check,
			     ARG(1, struct irqmgr_version, expected),
			     RET_NO,
			     SLOWDATA_NO)
	DEFINE_SIMPLE_METHOD(irq, stat,
			     ARG(1, struct irqmgr_stat_arg, arg),
			     RET_NO,
			     SLOWDATA_NO)
	DEFINE_SIMPLE_METHOD(irq, suspend,
			     ARG_NO,
			     RET_NO,
			     SLOWDATA_NO)
	DEFINE_SIMPLE_METHOD(irq, resume,
			     ARG_NO,
			     RET_NO,
			     SLOWDATA_NO)
)
