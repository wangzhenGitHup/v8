/*
 * Copyright (C) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.
 * Description: Hmtracemgr IPC interface
 * Author: Huawei OS Kernel Lab
 * Create: Mon Sep 9 16:30:16 2019
 */

/*
 * To support the mixed data model which means the client and the server
 * may use different data model. See the comment for limitation of data type
 * used in the sysif interfaces in <libsysif/base/api.h>.
 */
#ifdef SYSIF_EXPORT_API
#include <libhmtrace/hmtrace.h>
#include <libhmtrace/ring_buffer/ring_buffer.h>
#include <libbunch/bunch_ipc.h>

#define HMTRACE_DATA_SIZE HMTRACE_MAX_CLASS_NAME_SIZE
struct hmtrace_data {
	char buffer[HMTRACE_DATA_SIZE];
};
#endif

DEFINE_MANAGER(hmtrace, 16,
	DEFINE_METHOD(hmtrace, get_registered_class_list,
		      ARG(1, struct bunch_ipc_attr, attr),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, get_registered_events_list,
		      ARG(2, struct hmtrace_data, class_data,
			  struct bunch_ipc_attr, attr),
			  RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, get_available_events_list,
		      ARG(2, struct hmtrace_data, class_data,
			  struct bunch_ipc_attr, attr),
			  RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, register_event,
		      ARG(3, struct hmtrace_data, class_data,
			  const void *, buffer, unsigned int, buffer_size),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, unregister_event,
		      ARG(3, struct hmtrace_data, class_data,
			  const void *, buffer, unsigned int, buffer_size),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, set_event_tracing_on,
		      ARG(2, struct hmtrace_data, class_data,
			  struct hmtrace_data, event_data),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, set_event_tracing_off,
		      ARG(2, struct hmtrace_data, class_data,
			  struct hmtrace_data, event_data),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, events_tracing_on,
		      ARG(1, unsigned int, status),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, get_event_tracing_status,
		      ARG(2, struct hmtrace_data, class_data,
			  struct hmtrace_data, event_data),
		      RET(1, int, status),
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, get_rb_info,
		      ARG(1, struct hmtrace_data, class_data),
		      RET(1, struct rb, rb),
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, ipc_buf_open,
		      ARG(1, struct hmtrace_data, ipc_data),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, ipc_buf_read,
		      ARG(3, int, handle, unsigned long long, size, unsigned long long, key),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, ipc_buf_close,
		      ARG(1, int, handle),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(hmtrace, get_event_tracing_eid,
		      ARG(2, struct hmtrace_data, class_data,
			  struct hmtrace_data, event_data),
		      RET(1, int, eid),
		      SLOWDATA_NO)
)
