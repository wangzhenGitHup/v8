/*
 * Copyright (C) Huawei Technologies Co., Ltd. 2018-2020. All rights reserved.
 * Description: Generate procmgr sysif client interface
 * Author: Huawei OS Kernel Lab
 * Create: Wed Nov 14 20:03:51 2018
 */

#ifdef SYSIF_EXPORT_API
#include <libhmsrv_sys/hm_procmgr.h>
#include <libhmsrv_sys/hm_proc_affinity.h>
#endif

/*
 * To support the mixed data model which means the client and the server
 * may use different data model. See the comment for limitation of data type
 * used in the sysif interfaces in <libsysif/base/api.h>.
 */
DEFINE_MANAGER(proc, 128,
	DEFINE_METHOD(proc, spawn,
		      ARG(1, struct hm_spawn_req, req),
		      RET(2, pid_t, pid, unsigned int, child_cnode_idx),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, waitid,
		      ARG(3, pid_t, pid, unsigned int, options,
			  void *, infop),
		      RET(2, pid_t, pid, int, wstatus),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, wait4,
		      ARG(3, pid_t, pid, unsigned int, options,
			  void *, ru),
		      RET(2, pid_t, pid, int, wstatus),
		      SLOWDATA_NO)
	DEFINE_METHOD(proc, exit,
		      ARG(1, unsigned int, exit_status),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_SIMPLE_METHOD(proc, getpid,
			     ARG_NO,
			     RET_NO,
			     SLOWDATA_NO)

	DEFINE_METHOD(proc, pid_of,
		      ARG(1, unsigned int, cnode_idx),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, getppid,
		      ARG_NO,
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, cnode_idx_of,
		      ARG(1, pid_t, pid),
		      RET(1, unsigned int, cnode_idx),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, getpgid,
		      ARG(1, pid_t, pid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setpgid,
		      ARG(2, pid_t, pid, pid_t, dst_pgrp),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, getsid,
		      ARG(1, pid_t, pid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setsid,
		      ARG_NO,
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setfgpgrp,
		      ARG(2, pid_t, sid, pid_t, pgid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, getfgpgrp,
		      ARG(1, pid_t, sid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, mysid,
		      ARG_NO,
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, signal_fgpgrp,
		      ARG(2, pid_t, sid, int, signum),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setuid,
		      ARG(1, uid_t, uid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, getuid,
		      ARG_NO,
		      RET(1, uid_t, uid),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, geteuid,
		      ARG_NO,
		      RET(1, uid_t, euid),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, getresuid,
		      ARG_NO,
		      RET(3, uid_t, ruid, uid_t, euid, uid_t, suid),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setreuid,
		      ARG(2, uid_t, ruid, uid_t, euid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setresuid,
		      ARG(3, uid_t, ruid, uid_t, euid, uid_t, suid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, getgid,
		      ARG_NO,
		      RET(1, gid_t, gid),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, getegid,
		      ARG_NO,
		      RET(1, gid_t, egid),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, getresgid,
		      ARG_NO,
		      RET(3, gid_t, rgid, gid_t, egid, gid_t, sgid),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setregid,
		      ARG(2, gid_t, rgid, gid_t, egid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setgid,
		      ARG(1, gid_t, gid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setresgid,
		      ARG(3, gid_t, rgid, gid_t, egid, gid_t, sgid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setgroups,
		      ARG(2, unsigned int, data_size, gid_t *, group_list),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, getgroups,
		      ARG(2, unsigned int, data_size, gid_t *, group_list),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setfsuid,
		      ARG(1, uid_t, uid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setfsgid,
		      ARG(1, gid_t, gid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, stat,
		      ARG(3, pid_t, pid, unsigned int, flags,
		          struct bunch_ipc_attr, attr),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_SIMPLE_METHOD(proc, getrlimit,
		      ARG(3, pid_t, pid, unsigned int, cnode_idx,
			  unsigned int, type),
		      RET(2, unsigned long long, rlim_cur, unsigned long long, rlim_max),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, setrlimit,
		      ARG(5, pid_t, pid, unsigned int, cnode_idx,
			  unsigned int, type,
			  unsigned long long, rlim_cur, unsigned long long, rlim_max),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_SIMPLE_METHOD(proc, prlimit,
		      ARG(4, pid_t, pid, unsigned long long, rlim_cur,
			  unsigned long long, rlim_max, unsigned int, type),
		      RET(2, unsigned long long, rlim_cur, unsigned long long, rlim_max),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, debug_thread,
		      ARG(3, enum pdebug_thread_req, req, pid_t, tid,
			  void *, arg),
		      RET(1, rref_t, thread_rref),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, debug_wait_status,
		      ARG(3, pid_t, tid, void *, event, int, option),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, debug_vspace,
		      ARG(4, enum pdebug_vspace_req, req, pid_t, pid,
			  uintptr_t, addr, unsigned long, data),
		      RET(1, unsigned long long, data),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, get_coredump,
		      ARG(2, pid_t, pid, enum coredump_request, request),
		      RET(1, union coredump_attr, result),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, set_coredump,
		      ARG(3, pid_t, pid, union coredump_attr, value,
			  enum coredump_request, request),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, nsid_of_cnode_idx,
		      ARG(2, unsigned int, cnode_idx, int, flag),
		      RET(1, unsigned int, nsid),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, timer_create,
		      ARG(4, int, timer_id, cref_t, timer_cref,
			  struct __siginfo, siginfo, int, target_tid),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, timer_settime,
		      ARG(4, int, timer_id, unsigned long long, value,
			  unsigned long long, interval, int, flags),
		      RET(2, unsigned long long, rem_value, unsigned long long, old_interval),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, timer_gettime,
		      ARG(1, int, timer_id),
		      RET(2, unsigned long long, rem_value, unsigned long long, interval),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, timer_delete,
		      ARG(1, int, timer_id),
		      RET(1, cref_t, timer_cref),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, timer_getoverrun,
		      ARG(1, int, timer_id),
		      RET(1, unsigned long long, count),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, get_cputime,
		      ARG_NO,
		      RET(1, unsigned long long, time_value),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, getrusage,
		      ARG(1, int, who),
		      RET(1, struct rusage_compat64, usage),
		      SLOWDATA_NO)

	DEFINE_METHOD_ULONG(proc, execve,
			    ARG(1, struct hm_execve_req, req),
			    RET_NO,
			    SLOWDATA_NO)

	DEFINE_SIMPLE_METHOD(proc, new_permission,
			     ARG(1, unsigned long long, permission),
			     RET(1, cref_t, cref),
			     SLOWDATA_NO)

	DEFINE_SIMPLE_METHOD(proc, new_vspace_mmscd,
			     ARG(1, unsigned long, vstart),
			     RET(1, cref_t, cref),
			     SLOWDATA_NO)

	DEFINE_SIMPLE_METHOD(proc, new_vspace,
			     ARG(1, cref_t, base_pmem),
			     RET(1, cref_t, cref),
			     SLOWDATA_NO)

	DEFINE_SIMPLE_METHOD(proc, new_vm_mmscd,
			     ARG(2,
				 unsigned long, vstart,
				 struct sysarg_vm_config, vm_conf),
			     RET(1, cref_t, cref),
			     SLOWDATA_NO)

	DEFINE_SIMPLE_METHOD(proc, new_vm,
			     ARG(2,
				 cref_t, base_pmem,
				 struct sysarg_vm_config, vm_conf),
			     RET(1, cref_t, cref),
			     SLOWDATA_NO)

	DEFINE_SIMPLE_METHOD(proc, new_cpucontext_mmscd,
			     ARG(4, unsigned long, vstart,
				 unsigned long long, size,
				 unsigned long long, offset,
				 struct cpucontext_name, name),
			     RET(1, cref_t, cref),
			     SLOWDATA_NO)

	DEFINE_SIMPLE_METHOD(proc, new_cpucontext,
			     ARG(2, cref_t, base_pmem, struct cpucontext_name, name),
			     RET(1, cref_t, cref),
			     SLOWDATA_NO)

	DEFINE_METHOD(proc, elf_load_info,
		      ARG(2, pid_t, pid, struct bunch_ipc_attr, attr),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, pm_config_add,
		      ARG(1, struct proc_pm_config, config),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, pm_config_cleanup,
		      ARG_NO,
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, pm_dormancy_enter,
		      ARG(3, cref_t, src_tcb_cref,
			  enum proc_pm_attr, attr, int, enter),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, show_pte,
		      ARG(1, const void *, vaddr),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, check_regs,
		      ARG(3, unsigned int, which, unsigned long, addr,
			  size_t, size),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, get_dumpable,
		      ARG_NO,
		      RET(1, unsigned int, dumpable),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, set_dumpable,
		      ARG(1, unsigned long, dumpable),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, set_subreaper,
		      ARG(1, unsigned long, child_subreaper),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, get_subreaper,
		      ARG_NO,
		      RET(1, int, is_child_subreaper),
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, set_privs,
		      ARG_NO,
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, get_privs,
		      ARG_NO,
		      RET(1, bool, no_new_privs),
		      SLOWDATA_NO)

	DEFINE_SIMPLE_METHOD(proc, clone,
			     ARG(1, struct hm_clone_req, req),
			     RET(2, pid_t, tid, cref_t, cref),
			     SLOWDATA_NO)

	DEFINE_METHOD(proc, dyn_libs_data,
		      ARG(2, unsigned int, libs_cnt,
			  struct hm_actv_buf, dyn_buf),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, register_event,
		      ARG(2, unsigned int, type, struct event_args_s, args),
		      RET_NO,
		      SLOWDATA_NO)

	DEFINE_METHOD(proc, affinity_get,
		      ARG(1, pid_t, pid),
		      RET(1, struct proc_affinity_info_s, proc_affinity_info),
		      SLOWDATA_NO)
)
