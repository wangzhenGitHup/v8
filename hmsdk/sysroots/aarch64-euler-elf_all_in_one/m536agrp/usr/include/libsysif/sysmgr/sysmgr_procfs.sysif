/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.
 * Description: Procfs manager interface header file
 * Author: Huawei OS Kernel Lab
 * Create: Sat May 25 13:56:17 CST 2019
 */

/*
 * To support the mixed data model which means the client and the server
 * may use different data model. See the comment for limitation of data type
 * used in the sysif interfaces in <libsysif/base/api.h>.
 */
#ifdef SYSIF_EXPORT_API
#define PROCFS_SIMPLE_DATA_LEN (SYSIF_REPLY_LEN_MAX - sizeof(unsigned long long))

/*
 * Note:
 *   The client and the server shall see the same sizeof(struct)
 */
struct procfs_simple_data {
	uint32_t size;
	char data[PROCFS_SIMPLE_DATA_LEN];
};

#define PROCFS_TAGNAME_MAX_LEN 32
struct procfs_tagname {
	char name[PROCFS_TAGNAME_MAX_LEN];
};
#endif

DEFINE_MANAGER(procfs, 22,
	DEFINE_METHOD(procfs, simple_read,
		      ARG(1, struct hm_actv_buf, name_buf),
		      RET(1, struct procfs_simple_data, result),
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, simple_pid_read,
		      ARG(3, int, pid, unsigned long long, seq,
		          struct hm_actv_buf, name_buf),
		      RET(1, struct procfs_simple_data, result),
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, simple_tid_read,
		      ARG(3, int, tid, unsigned long long, seq,
		          struct hm_actv_buf, name_buf),
		      RET(1, struct procfs_simple_data, result),
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, pid_read,
		      ARG(5,
			  int, pid, unsigned long long, seq,
			  int, shm_id,
			  unsigned long long, mpool_size,
			  struct hm_actv_buf, name_buf),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, tid_read,
		      ARG(5,
			  int, tid, unsigned long long, seq,
			  int, shm_id,
			  unsigned long long, mpool_size,
			  struct hm_actv_buf, name_buf),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, read,
		      ARG(3, int, shm_id, unsigned long long, mpool_size,
		          struct hm_actv_buf, name_buf),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, pid_write,
		      ARG(5,
			  struct procfs_tagname, name,
			  int, pid, unsigned long long, seq,
			  unsigned long long, pos,
			  struct hm_actv_buf, name_buf),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, tid_write,
		      ARG(5,
			  struct procfs_tagname, name,
			  int, tid, unsigned long long, seq,
			  unsigned long long, pos,
			  struct hm_actv_buf, name_buf),
			  RET_NO,
			  SLOWDATA_NO)
	DEFINE_METHOD(procfs, write,
		      ARG(3, struct procfs_tagname, name, unsigned long long, pos,
		          struct hm_actv_buf, name_buf),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, yama_write,
		      ARG(5,
			  unsigned long long, pos,
			  unsigned int, cnode_idx,
			  struct procfs_tagname, name,
			  const void *, send_buf,
			  unsigned long, buf_len),
			  RET_NO,
			  SLOWDATA_NO)
	DEFINE_METHOD(procfs, get_allpids,
		      ARG(1, int, shm_id),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, get_alltids,
		      ARG(3, int, pid, unsigned long long, seq,
			  int, shm_id),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, get_irq_names,
		      ARG(1, int, shm_id),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, simple_irq_read,
		      ARG(2, uint32_t, id, struct hm_actv_buf, name_buf),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, irq_read,
		      ARG(4,
			  uint32_t, irq_id,
			  int, shm_id,
			  unsigned long long, shm_size,
			  struct hm_actv_buf, name_buf),
		      RET_NO,
		      SLOWDATA_NO)
	DEFINE_METHOD(procfs, irq_write,
		      ARG(4,
			  uint32_t, irq_id,
			  struct procfs_tagname, tagname,
			  unsigned long long, pos,
			  struct hm_actv_buf, src_buf),
		      RET_NO,
		      SLOWDATA_NO)
)
