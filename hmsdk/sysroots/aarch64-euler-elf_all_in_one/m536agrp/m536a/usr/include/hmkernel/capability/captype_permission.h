/*
 * Copyright (C) Huawei Technologies Co., Ltd. 2018-2020. All rights reserved.
 * Description: Permission
 * Author: Huawei OS Kernel Lab
 * Create: Mon Sep 23 09:45:35 2018
 */
/*
 * Must choose one GRANT type from ALL/NO/COARSE/FINE
 * Must choose one GRANTMOVE type from ALL/NO/COARSE
 */
CAPTYPE(Permission, 15, CAPNOGRANT(Permission)
			CAPNOGRANTMOVE(Permission)
			CAPNODEFAULTCREF(Permission)
			CAPRAWCREFRLOOKUP(Permission)
			CAPDEFAULTSIZE(Permission),
	CAPMETHOD(Permission, Stat)

	CAPERRNO(Permission, EPERM, PERMISSION_NORIGHT,		"E_HM_PERMISSION_NORIGHT")
	CAPERRNO(Permission, EINVAL, PERMISSION_INVAL_CREF,	"E_HM_PERMISSION_INVAL_CREF")
)

#ifdef CAP_EXPORT_API
#ifndef CAP_PERMISSION_API_EXPORTED
#define CAP_PERMISSION_API_EXPORTED

enum {
	CRIGHT_PERMISSION_MAX
};

enum {
	CPERMISSION_NEW_PERMISSION_BIT,
	CPERMISSION_NEW_VSPACE_BIT,
	CPERMISSION_NEW_VM_BIT,
	CPERMISSION_NEW_CPUCONTEXT_PMU_BIT,
	CPERMISSION_NEW_CPUCONTEXT_DEBUG_BIT,
	CPERMISSION_NEW_CPUCONTEXT_VCPU_BIT,
	CPERMISSION_LOAD_PREV_STAT_BIT,
	CPERMISSION_STORE_PREV_UCTX_BIT,
	CPERMISSION_ACTV_RW_CALLER_VM_BIT,
	CPERMISSION_PMEM_STAT_PADDR_BIT,
	CPERMISSION_NEW_DEL_PMEM_BIT,
	CPERMISSION_SELFCHAIN_LOAD_PREV_STAT_BIT,
	CPERMISSION_SELFCHAIN_STORE_PREV_UCTX_BIT,
	CPERMISSION_SPECCHAIN_LOAD_PREV_STAT_BIT,
	CPERMISSION_SPECCHAIN_STORE_PREV_UCTX_BIT,
	CPERMISSION_SCHED_NATIVE_SERVICE_BIT,
	CPERMISSION_SCHED_ADMIN_BIT,
	CPERMISSION_KLOG_BIT,
	CPERMISSION_REDUCE_CAP_RIGHTS_BIT,
	CPERMISSION_KCONSOLE_BIT,
	CPERMISSION_THREAD_BIND_ACTVPOOL_BIT,
	CPERMISSION_REVOKE_GRANT_BIT,
	CPERMISSION_NEW_DEL_ACTVPOOL_BIT,
	CPERMISSION_NEW_DEL_THREAD_BIT,
	CPERMISSION_NEW_DEL_SCHEDULER_BIT,
	CPERMISSION_SCHED_PREEMPT_BIT,
	CPERMISSION_CNODE_PROXY_GRANT_BIT,
	CPERMISSION_WATCHDOG_BIT,
	CPERMISSION_QUERY_TIMER_FIRST_TIMEOUT_BIT,
	CPERMISSION_HMSIG_MASK_NONMASKABLE_BIT,
	CPERMISSION_KEV_PRIVILEGE_BIT,
	CPERMISSION_KEV_IRQ_BIT,
	CPERMISSION_KEV_SAMPLE_BIT,
	CPERMISSION_KEV_KLOG_BIT,
	CPERMISSION_KEV_AUDIT_BIT,
	CPERMISSION_KEV_TRAP_EL2_BIT,
	CPERMISSION_MAX
};

#define CPERMISSION_NEW_PERMISSION		(1ULL << CPERMISSION_NEW_PERMISSION_BIT)
#define CPERMISSION_NEW_VSPACE			(1ULL << CPERMISSION_NEW_VSPACE_BIT)
#define CPERMISSION_NEW_VM			(1ULL << CPERMISSION_NEW_VM_BIT)
#define CPERMISSION_NEW_CPUCONTEXT_PMU		(1ULL << CPERMISSION_NEW_CPUCONTEXT_PMU_BIT)
#define CPERMISSION_NEW_CPUCONTEXT_DEBUG	(1ULL << CPERMISSION_NEW_CPUCONTEXT_DEBUG_BIT)
#define CPERMISSION_NEW_CPUCONTEXT_VCPU		(1ULL << CPERMISSION_NEW_CPUCONTEXT_VCPU_BIT)
/* permisson to load stat of previous actv */
#define CPERMISSION_LOAD_PREV_STAT		(1ULL << CPERMISSION_LOAD_PREV_STAT_BIT)
/* permisson to store uctx of previous actv */
#define CPERMISSION_STORE_PREV_UCTX		(1ULL << CPERMISSION_STORE_PREV_UCTX_BIT)
#define CPERMISSION_ACTV_RW_CALLER_VM		(1ULL << CPERMISSION_ACTV_RW_CALLER_VM_BIT)
#define CPERMISSION_PMEM_STAT_PADDR		(1ULL << CPERMISSION_PMEM_STAT_PADDR_BIT)
/*
 * permission to create/destory the cap of pmem, which is only
 * owned by sysmgr
 */
#define CPERMISSION_NEW_DEL_PMEM		(1ULL << CPERMISSION_NEW_DEL_PMEM_BIT)
/*
 * permission to load stat or store uctx of previous actv of a
 * specific actv in self call chain
 */
#define CPERMISSION_SELFCHAIN_LOAD_PREV_STAT	(1ULL << CPERMISSION_SELFCHAIN_LOAD_PREV_STAT_BIT)
#define CPERMISSION_SELFCHAIN_STORE_PREV_UCTX	(1ULL << CPERMISSION_SELFCHAIN_STORE_PREV_UCTX_BIT)
/*
 * permission to load stat or store uctx of previous actv of a
 * specific actv in a specific call chain
 */
#define CPERMISSION_SPECCHAIN_LOAD_PREV_STAT	(1ULL << CPERMISSION_SPECCHAIN_LOAD_PREV_STAT_BIT)
#define CPERMISSION_SPECCHAIN_STORE_PREV_UCTX	(1ULL << CPERMISSION_SPECCHAIN_STORE_PREV_UCTX_BIT)
/*
 * permission to set native service priorities
 * for scheduling
 */
#define CPERMISSION_SCHED_NATIVE_SERVICE	(1ULL << CPERMISSION_SCHED_NATIVE_SERVICE_BIT)

/* permission for setting system scheduling properties, such as loadlance, system scheduler switch */
#define CPERMISSION_SCHED_ADMIN			(1ULL << CPERMISSION_SCHED_ADMIN_BIT)

/* permission to output klog to kernel buffer */
#define CPERMISSION_KLOG			(1ULL << CPERMISSION_KLOG_BIT)

#define CPERMISSION_REDUCE_CAP_RIGHTS		(1ULL << CPERMISSION_REDUCE_CAP_RIGHTS_BIT)

/* permission to output data to kernel kconsole, which is only owned by devhost */
#define CPERMISSION_KCONSOLE			(1ULL << CPERMISSION_KCONSOLE_BIT)

/* permission to bind actvpool for thread, which is only owned by sysmgr */
#define CPERMISSION_THREAD_BIND_ACTVPOOL	(1ULL << CPERMISSION_THREAD_BIND_ACTVPOOL_BIT)

/* permission to enable/disable hard/soft watchdog */
#define CPERMISSION_WATCHDOG                    (1ULL << CPERMISSION_WATCHDOG_BIT)

/*
 * permission to revoke the cnode grant, which is only owned by sysmgr.
 *
 * NOTE: Currently, if the authorization of the cnode to the sysmgr is
 * revoked, the sysmgr cannot relcaim the resoures of the cnode anymore.
 * To avoid this, temporarily add a new permission, to forbid the uapp
 * (not sysmgr) revoking the cnode uref.
 *
 * In future, might be necessary to perfect the base infrastructure of
 * the capability mechanism to solve this problem utterly.
 */
#define CPERMISSION_REVOKE_GRANT		(1ULL << CPERMISSION_REVOKE_GRANT_BIT)

/* permission to create/destory the cap of actvpool, which is owned by server processes,
 * such as sysmgr, devhost, and so on */
#define CPERMISSION_NEW_DEL_ACTVPOOL		(1ULL << CPERMISSION_NEW_DEL_ACTVPOOL_BIT)

/* permission to create/destory the cap of thread, which is only created by sysmgr */
#define CPERMISSION_NEW_DEL_THREAD		(1ULL << CPERMISSION_NEW_DEL_THREAD_BIT)

/* permission to create/destory the cap of scheduler, which is only owned by sysmgr */
#define CPERMISSION_NEW_DEL_SCHEDULER		(1ULL << CPERMISSION_NEW_DEL_SCHEDULER_BIT)

/* permission to disable/enable preempt of scheduler */
#define CPERMISSION_SCHED_PREEMPT		(1ULL << CPERMISSION_SCHED_PREEMPT_BIT)

/* permission to establish and reject the proxy authorization. */
#define CPERMISSION_CNODE_PROXY_GRANT		(1ULL << CPERMISSION_CNODE_PROXY_GRANT_BIT)

/* permission to query the first timeout of timer, which is only owned by tppmgr */
#define CPERMISSION_QUERY_TIMER_FIRST_TIMEOUT	(1ULL << CPERMISSION_QUERY_TIMER_FIRST_TIMEOUT_BIT)

#define CPERMISSION_HMSIG_MASK_NONMASKABLE (1ULL << CPERMISSION_HMSIG_MASK_NONMASKABLE_BIT)

/* permission to read different type of the kev data */
#define CPERMISSION_KEV_PRIVILEGE 		(1ULL << CPERMISSION_KEV_PRIVILEGE_BIT)
#define CPERMISSION_KEV_IRQ 			(1ULL << CPERMISSION_KEV_IRQ_BIT)
#define CPERMISSION_KEV_SAMPLE 			(1ULL << CPERMISSION_KEV_SAMPLE_BIT)
#define CPERMISSION_KEV_KLOG 			(1ULL << CPERMISSION_KEV_KLOG_BIT)
#define CPERMISSION_KEV_AUDIT 			(1ULL << CPERMISSION_KEV_AUDIT_BIT)
#define CPERMISSION_KEV_TRAP_EL2 		(1ULL << CPERMISSION_KEV_TRAP_EL2_BIT)

#define CPERMISSION_ALL \
	(CPERMISSION_NEW_PERMISSION		| \
	 CPERMISSION_NEW_VSPACE			| \
	 CPERMISSION_NEW_VM			| \
	 CPERMISSION_NEW_CPUCONTEXT_PMU		| \
	 CPERMISSION_NEW_CPUCONTEXT_DEBUG	| \
	 CPERMISSION_NEW_CPUCONTEXT_VCPU	| \
	 CPERMISSION_LOAD_PREV_STAT		| \
	 CPERMISSION_STORE_PREV_UCTX		| \
	 CPERMISSION_ACTV_RW_CALLER_VM		| \
	 CPERMISSION_PMEM_STAT_PADDR		| \
	 CPERMISSION_NEW_DEL_PMEM		| \
	 CPERMISSION_SELFCHAIN_LOAD_PREV_STAT	| \
	 CPERMISSION_SELFCHAIN_STORE_PREV_UCTX	| \
	 CPERMISSION_SPECCHAIN_LOAD_PREV_STAT	| \
	 CPERMISSION_SPECCHAIN_STORE_PREV_UCTX	| \
	 CPERMISSION_SCHED_NATIVE_SERVICE	| \
	 CPERMISSION_SCHED_ADMIN		| \
	 CPERMISSION_KLOG			| \
	 CPERMISSION_REDUCE_CAP_RIGHTS		| \
	 CPERMISSION_KCONSOLE			| \
	 CPERMISSION_THREAD_BIND_ACTVPOOL	| \
	 CPERMISSION_REVOKE_GRANT		| \
	 CPERMISSION_NEW_DEL_ACTVPOOL		| \
	 CPERMISSION_NEW_DEL_THREAD		| \
	 CPERMISSION_NEW_DEL_SCHEDULER		| \
	 CPERMISSION_CNODE_PROXY_GRANT		| \
	 CPERMISSION_WATCHDOG			| \
	 CPERMISSION_SCHED_PREEMPT		| \
	 CPERMISSION_QUERY_TIMER_FIRST_TIMEOUT  | \
	 CPERMISSION_HMSIG_MASK_NONMASKABLE	| \
	 CPERMISSION_SCHED_PREEMPT		| \
	 CPERMISSION_KEV_PRIVILEGE		| \
	 CPERMISSION_KEV_IRQ			| \
	 CPERMISSION_KEV_SAMPLE			| \
	 CPERMISSION_KEV_KLOG			| \
	 CPERMISSION_KEV_AUDIT			| \
	 CPERMISSION_KEV_TRAP_EL2)

#endif
#endif
