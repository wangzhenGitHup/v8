/*
 * Copyright (C) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.
 * Description: Captype activation
 * Author: Huawei OS Kernel Lab
 * Create: Mon Aug 12 21:46:25 2019
 */
/*
 * Must choose one GRANT type from ALL/NO/COARSE/FINE
 * Must choose one GRANTMOVE type from ALL/NO/COARSE
 */
CAPTYPE(Activation, 5, CAPNOGRANT(Activation)
		       CAPNOGRANTMOVE(Activation)
		       CAPDEFAULTSIZE(Activation),
	CAPMETHOD(Activation, Init)
	CAPMETHOD(Activation, Ready)
	CAPMETHOD(Activation, Recycle)
	CAPMETHOD(Activation, Kill)
	CAPMETHOD(Activation, LoadLastUctx)
	CAPMETHOD(Activation, StoreLastUctx)
	CAPMETHOD(Activation, HMSignalMask)
	CAPMETHOD(Activation, TriggerDetachOne)
	CAPMETHOD(Activation, AvailableExtFastcall)
	CAPMETHOD(Activation, InstallElambdaExtension)
	CAPMETHOD(Activation, UninstallElambdaExtension)
	CAPMETHOD(Activation, AttachFpuContext)
	CAPMETHOD(Activation, DetachFpuContext)

	CAPERRNO(Activation, EHMERROR, ACTIVATION_WORKING,		"E_HM_ACTIVATION_WORKING")
	CAPERRNO(Activation, EHMERROR, ACTIVATION_INACTIVE,		"E_HM_ACTIVATION_INACTIVE")
	CAPERRNO(Activation, EHMERROR, ACTIVATION_NOTINIT,		"E_HM_ACTIVATION_NOTINIT")
	CAPERRNO(Activation, EHMERROR, ACTIVATION_CRASH,		"E_HM_ACTIVATION_CRASH")
	CAPERRNO(Activation, EHMERROR, ACTIVATION_STATE,		"E_HM_ACTIVATION_STATE")
	CAPERRNO(Activation, EHMERROR, ACTIVATION_BOUND,		"E_HM_ACTIVATION_BOUND")
	CAPERRNO(Activation, EHMERROR, ACTIVATION_EXP_NO_HANDLER,	"E_HM_ACTIVATION_EXP_NO_HANDLER")
	CAPERRNO(Activation, EHMERROR, ACTIVATION_WRONG_CHAIN,		"E_HM_ACTIVATION_WRONG_CHAIN")
	CAPERRNO(Activation, EHMERROR, ACTIVATION_RPC_RETRY,		"E_HM_ACTIVATION_RPC_RETRY")
	)

#ifdef CAP_EXPORT_API

#include <hmkernel/activation/local_area.h>

#define __CAP_ACTIVATION_OBJ_SIZE  1024u

#define __ACTV_WFERET_UPCALL_OK		((int)(0))
#define __ACTV_WFERET_UPCALL_RET	((int)(1))
#define __ACTV_WFERET_UPCALL_REWIND	((int)(2))
#define __ACTV_WFERET_UPCALL_CRASH	((int)(3))

#define __ACTV_WFERET_KPAGEFAULT_OK	__ACTV_WFERET_UPCALL_OK
#define __ACTV_WFERET_KPAGEFAULT_RET	__ACTV_WFERET_UPCALL_RET
#define __ACTV_WFERET_KPAGEFAULT_REWIND	__ACTV_WFERET_UPCALL_REWIND

#define __ACTV_WFERET_LINUX_SYSCALL_OK		__ACTV_WFERET_UPCALL_OK
#define __ACTV_WFERET_LINUX_SYSCALL_RET		__ACTV_WFERET_UPCALL_RET
#define __ACTV_WFERET_LINUX_SYSCALL_REWIND	__ACTV_WFERET_UPCALL_REWIND
#define __ACTV_WFERET_LINUX_SYSCALL_CRASH	__ACTV_WFERET_UPCALL_CRASH

#define __ACTV_WFERET_COPAGE_OK		__ACTV_WFERET_UPCALL_OK
#define __ACTV_WFERET_COPAGE_RET	__ACTV_WFERET_UPCALL_RET
#define __ACTV_WFERET_COPAGE_REWIND	__ACTV_WFERET_UPCALL_REWIND
#define __ACTV_WFERET_COPAGE_CRASH	__ACTV_WFERET_UPCALL_CRASH

#define __ACTV_WFERET_POOL_GRANT_CHANGE_OK	__ACTV_WFERET_UPCALL_OK
#define __ACTV_WFERET_POOL_GRANT_CHANGE_RET	__ACTV_WFERET_UPCALL_RET
#define __ACTV_WFERET_POOL_GRANT_CHANGE_REWIND	__ACTV_WFERET_UPCALL_REWIND

#define __ACTV_WFERET_HMSIGNAL_OK	__ACTV_WFERET_UPCALL_OK
#define __ACTV_WFERET_HMSIGNAL_REWIND	__ACTV_WFERET_UPCALL_REWIND
#define __ACTV_WFERET_HMSIGNAL_CRASH	__ACTV_WFERET_UPCALL_CRASH

#define __ACTV_WFERET_EXCEPTION_OK	__ACTV_WFERET_UPCALL_OK
#define __ACTV_WFERET_EXCEPTION_CRASH	__ACTV_WFERET_UPCALL_CRASH

#define __ACTV_LOAD_STAT_UCTX		(1UL << 1U)
#define __ACTV_LOAD_STAT_ELAMBDA_EXT	(1UL << 2U)
#define __ACTV_LOAD_STAT_FPSIMD		(1UL << 3U)

/* flags for kpagefault kcall */
#define KPAGEFAULT_F_WRITE		(__U(1) << 6)
#define KPAGEFAULT_F_STATUS_MASK	0x3FUL	/* The fault status code from esr/fsr */

struct sysarg_actv_stat {
	struct arch_uctx uctx;
	__u8 elambda_extension_bitmap;
};

enum {
	CRIGHT_ACTIVATION_MAX
};

#endif
