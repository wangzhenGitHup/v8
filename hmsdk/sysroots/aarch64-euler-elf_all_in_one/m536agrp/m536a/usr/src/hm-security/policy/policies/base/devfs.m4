DEF_FILE_OBJECT(devfs, ``/dev'')

DEF_TYPES(dev_comm)
DEF_TYPES(dev_uio)
DEF_TYPES(dev_tty)
DEF_TYPES(dev_pty)
DEF_TYPES(dev_mtd)
DEF_TYPES(dev_ubifs_ctrl)
DEF_TYPES(dev_binder)
DEF_TYPES(dev_ashmem)
DEF_TYPES(dev_freq)
DEF_TYPES(dev_kmsg)
DEF_TYPES(dev_unlabeled)

DEF_FILE_OBJECT(dev_kmsg, ``devfs:/kmsg'')
DEF_FILE_OBJECT(dev_shm, ``/dev/shm'')
DEF_FILE_OBJECT(dev_comm, ``devfs:/zero'')
DEF_FILE_OBJECT(dev_comm, ``devfs:/null'')
DEF_FILE_OBJECT(dev_shm, ``devfs:/shm'')
DEF_FILE_OBJECT(dev_uio, ``devfs:/uio*'')
DEF_FILE_OBJECT(dev_tty, ``devfs:/tty*'')
COMMENT /dev/pts* is also tty device
DEF_FILE_OBJECT(dev_tty, ``devfs:/pts*'')
DEF_FILE_OBJECT(dev_pty, ``devfs:/pty*'')
DEF_FILE_OBJECT(dev_mtd, ``devfs:/mtd*'')
DEF_FILE_OBJECT(dev_ubifs_ctrl, ``devfs:/ubifs_ctrl'')
DEF_FILE_OBJECT(dev_binder, ``devfs:/*binder'')
DEF_FILE_OBJECT(dev_ashmem, ``devfs:/ashmem'')
DEF_FILE_OBJECT(dev_freq, ``devfs:/hmtpp_freq_ctrl'')
DEF_FILE_OBJECT(dev_unlabeled, ``devfs:/*'')
TYPE_ADD_ATTRIBUTES((dev_comm), (device_node))
TYPE_ADD_ATTRIBUTES((dev_uio), (device_node))
TYPE_ADD_ATTRIBUTES((dev_tty), (device_node))
TYPE_ADD_ATTRIBUTES((dev_pty), (device_node))
TYPE_ADD_ATTRIBUTES((dev_mtd), (device_node))
TYPE_ADD_ATTRIBUTES((dev_ubifs_ctrl), (device_node))
COMMENT /dev/shm is a mount point
TYPE_ADD_ATTRIBUTES((dev_shm), (mount_point, device_node))
COMMENT all process could read basic_dir
TYPE_ADD_ATTRIBUTES((devfs), (basic_dir, mount_point))
TYPE_ADD_ATTRIBUTES((dev_binder), (device_node))
TYPE_ADD_ATTRIBUTES((dev_ashmem), (device_node))
TYPE_ADD_ATTRIBUTES((dev_freq), (device_node))
TYPE_ADD_ATTRIBUTES((dev_kmsg), (device_node))
TYPE_ADD_ATTRIBUTES((dev_unlabeled), (device_node, device_directory))
TE_POLICY(A(stdio), T(dev_tty), (fread, fwrite, getfileattr))
