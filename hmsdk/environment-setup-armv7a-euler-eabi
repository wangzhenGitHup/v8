# Check for LD_LIBRARY_PATH being set, which can break SDK and generally is a bad practice
# http://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html#AEN80
# http://xahlee.info/UnixResource_dir/_/ldpath.html
# Only disable this check if you are absolutely know what you are doing!
if [ ! -z "$LD_LIBRARY_PATH" ]; then
    echo "Your environment is misconfigured, you probably need to 'unset LD_LIBRARY_PATH'"
    echo "but please check why this was set in the first place and that it's safe to unset."
    echo "The SDK will not operate correctly in most cases when LD_LIBRARY_PATH is set."
    echo "For more references see:"
    echo "  http://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html#AEN80"
    echo "  http://xahlee.info/UnixResource_dir/_/ldpath.html"
    return 1
fi
export SDKTARGETSYSROOT=/root/program/hmsdk/sysroots/aarch64-euler-elf
declare -A hmsdktargets
HMSDKTARGET=""
hmsdktargets["foundation"]="/foundationgrp/foundation"
hmsdktargets["foundationhyp"]="/foundationgrp/foundationhyp"
hmsdktargets["foundationmvisor"]="/foundationgrp/foundationmvisor"
hmsdktargets["hi1910"]="/hi1910grp/hi1910"
hmsdktargets["hi1910hyp"]="/hi1910grp/hi1910hyp"
hmsdktargets["kirin980android"]="/kirin980grp/kirin980android"
hmsdktargets["m536a"]="/m536agrp/m536a"
hmsdktargets["qemu64lehyp"]="/qemu64legrp/qemu64lehyp"
hmsdktargets["qemu64leiot"]="/qemu64legrp/qemu64leiot"
hmsdktargets["qemu64lenuma"]="/qemu64legrp/qemu64lenuma"
hmsdktargets["qemu64lespin"]="/qemu64legrp/qemu64lespin"
hmsdktargets["rpi4b"]="/bcmgrp/rpi4b"
hmsdktargets["sd5151t"]="/sd5151tgrp/sd5151t"
hmsdktargets["bcmgrp"]="/bcmgrp"
hmsdktargets["foundationgrp"]="/foundationgrp"
hmsdktargets["hi1910grp"]="/hi1910grp"
hmsdktargets["kirin980grp"]="/kirin980grp"
hmsdktargets["m536agrp"]="/m536agrp"
hmsdktargets["qemu64legrp"]="/qemu64legrp"
hmsdktargets["sd5151tgrp"]="/sd5151tgrp"
if [ $# -ge 1 ]; then
    HMSDKTARGET=${hmsdktargets[$1]}
fi
if [ "x$HMSDKTARGET" != "x$(readlink ${SDKTARGETSYSROOT})" ]; then
    rm -f ${SDKTARGETSYSROOT}
    ln -s $(basename ${SDKTARGETSYSROOT})_all_in_one${HMSDKTARGET} ${SDKTARGETSYSROOT}
fi
export PATH=/root/program/hmsdk/sysroots/x86_64-eulersdk-linux/usr/bin:/root/program/hmsdk/sysroots/x86_64-eulersdk-linux/usr/sbin:/root/program/hmsdk/sysroots/x86_64-eulersdk-linux/bin:/root/program/hmsdk/sysroots/x86_64-eulersdk-linux/sbin:/root/program/hmsdk/sysroots/x86_64-eulersdk-linux/usr/bin/../x86_64-eulersdk-linux/bin:/root/program/hmsdk/sysroots/x86_64-eulersdk-linux/usr/bin/arm-euler-eabi:/root/program/hmsdk/sysroots/x86_64-eulersdk-linux/usr/bin/arm-euler-linux-musl:$PATH
export PKG_CONFIG_SYSROOT_DIR=$SDKTARGETSYSROOT
export PKG_CONFIG_PATH=$SDKTARGETSYSROOT/usr/lib32/pkgconfig:$SDKTARGETSYSROOT/usr/share/pkgconfig
export CONFIG_SITE=/root/program/hmsdk/site-config-armv7a-euler-eabi
export OECORE_NATIVE_SYSROOT="/root/program/hmsdk/sysroots/x86_64-eulersdk-linux"
export OECORE_TARGET_SYSROOT="$SDKTARGETSYSROOT"
export OECORE_ACLOCAL_OPTS="-I /root/program/hmsdk/sysroots/x86_64-eulersdk-linux/usr/share/aclocal"
export OECORE_BASELIB="lib32"
export OECORE_TARGET_ARCH="arm"
export OECORE_TARGET_OS="eabi"
unset command_not_found_handle
export CC="arm-euler-eabi-gcc  -march=armv7-a -mfpu=vfp -mfloat-abi=softfp -mlittle-endian --sysroot=$SDKTARGETSYSROOT"
export CXX="arm-euler-eabi-g++  -march=armv7-a -mfpu=vfp -mfloat-abi=softfp -mlittle-endian --sysroot=$SDKTARGETSYSROOT"
export CPP="arm-euler-eabi-gcc -E  -march=armv7-a -mfpu=vfp -mfloat-abi=softfp -mlittle-endian --sysroot=$SDKTARGETSYSROOT"
export AS="arm-euler-eabi-as "
export LD="arm-euler-eabi-ld  --sysroot=$SDKTARGETSYSROOT"
export GDB=arm-euler-eabi-gdb
export STRIP=arm-euler-eabi-strip
export RANLIB=arm-euler-eabi-ranlib
export OBJCOPY=arm-euler-eabi-objcopy
export OBJDUMP=arm-euler-eabi-objdump
export READELF=arm-euler-eabi-readelf
export AR=arm-euler-eabi-ar
export NM=arm-euler-eabi-nm
export M4=m4
export TARGET_PREFIX=arm-euler-eabi-
export CONFIGURE_FLAGS="--target=arm-euler-eabi --host=arm-euler-eabi --build=x86_64-linux --with-libtool-sysroot=$SDKTARGETSYSROOT"
export CFLAGS="      -fstack-protector-strong      -O2 -pipe "
export CXXFLAGS="      -fstack-protector-strong      -O2 -pipe "
export LDFLAGS="      -Wl,-z,relro     -Wl,-z,now     -Wl,-z,noexecstack     -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed"
export CPPFLAGS=""
export KCFLAGS="--sysroot=$SDKTARGETSYSROOT"
export OECORE_DISTRO_VERSION="0.0.1"
export OECORE_SDK_VERSION="0.0.1"
export ARCH=aarch64
export CROSS_COMPILE=arm-euler-eabi-

# Append environment subscripts
if [ -d "$OECORE_TARGET_SYSROOT/environment-setup.d" ]; then
    for envfile in $OECORE_TARGET_SYSROOT/environment-setup.d/*.sh; do
	    . $envfile
    done
fi
if [ -d "$OECORE_NATIVE_SYSROOT/environment-setup.d" ]; then
    for envfile in $OECORE_NATIVE_SYSROOT/environment-setup.d/*.sh; do
	    . $envfile
    done
fi
export HMSDKPATH_NATIVE=$OECORE_NATIVE_SYSROOT
export HMSDKPATH=$OECORE_NATIVE_SYSROOT/../..
export HMSDKSYSROOTPATH=$SDKTARGETSYSROOT
export HMSDKNATIVESYSROOTPATH=$OECORE_NATIVE_SYSROOT
export _HMSDKNATIVESYSROOTPATH=$OECORE_NATIVE_SYSROOT
export _HMSDKSYSROOTPATH=$SDKTARGETSYSROOT
export _HMSDKINCLUDE=$SDKTARGETSYSROOT/usr/include32
export _HMSDKLIB=$SDKTARGETSYSROOT/usr/lib32
export HMSECURITY_KCFI_CFLAGS=-fplugin=libkcfi.so
export HMSECURITY_KASAN_CFLAGS="-fsanitize=kernel-address                                         -fasan-shadow-offset=0x6666666000                                         --param asan-stack=1                                         --param asan-globals=1                                         -DENABLE_KASAN"
export HMSECURITY_KASAN_SHARED_LDFLAGS="-Wl,-lkasan     -Wl,-lhmulibs     -Wl,-lc_kasan     -Wl,-lhwsecurec     -Wl,-lhmsrv_fs_kasan     -Wl,-lhmsrv_kernfs_kasan     -Wl,-lhmsrv_net_kasan     -Wl,-lhmsrv_sec_kasan"
export HMSECURITY_KASAN_STATIC_LDFLAGS="-Wl,--wrap,hmcrt_posthook     -Wl,--wrap,hm_mem_brk     -Wl,--wrap,hm_mem_mmap_posix     -Wl,--wrap,hm_mem_munmap     -Wl,--wrap,malloc     -Wl,--wrap,free     -Wl,--wrap,calloc     -Wl,--wrap,realloc     -Wl,--wrap,hm_mem_mremap     -Wl,--wrap,hm_mem_mmap     -Wl,--wrap,hm_server_mem_mmap_posix     -Wl,--wrap,hm_server_mem_munmap     -Wl,--wrap,actv_open_region     -Wl,--wrap,actv_close_region     -Wl,--wrap,copage_alloc     -Wl,--wrap,copage_free     -Wl,--wrap,copage_populate     -Wl,--wrap,hm_mem_alloc_shm_anon     -Wl,--wrap,hm_mem_free_shm_anon     -Wl,--wrap,hm_vm_map_to_process     -Wl,--wrap,hm_vm_map_iomem     -Wl,--wrap,mem_pool_alloc     -Wl,--wrap,mem_pool_free     -Wl,--wrap,hm_mem_mprotect     -Wl,--wrap,hm_ipc_shmat     -Wl,--wrap,hm_ipc_shmdt "
export HMSECURITY_KASAN_CMAKE_CFLAGS="-fsanitize=kernel-address     -fasan-shadow-offset=0x6666666000     'SHELL:--param asan-stack=1'     'SHELL:--param asan-globals=1'     -DENABLE_KASAN"
export HMSECURITY_KASAN_CMAKE_LIBRARIES="-lkasan     -lhmulibs     -lc_kasan     -lhwsecurec     -lhmsrv_fs_kasan     -lhmsrv_kernfs_kasan     -lhmsrv_net_kasan     -lhmsrv_sec_kasan"
export HMSECURITY_UBSAN_CFLAGS="-fsanitize=undefined                                         -fsanitize-undefined-trap-on-error                                         -fno-sanitize=alignment"
export HMSECURITY_SSTACK_REG_CFLAGS="-fplugin=libshadow_stack.so -fplugin-arg-libshadow_stack-method=reg -ffixed-x18"
export HMSECURITY_SSTACK_MEM_CFLAGS="-fplugin=libshadow_stack.so -fplugin-arg-libshadow_stack-method=mem -fplugin-arg-libshadow_stack-offset=144"
export HMSECURITY_XOM_CFLAGS="-fplugin=libxom.so"
