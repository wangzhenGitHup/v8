# Copyright 2018 the V8 project authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/toolchain/gcc_toolchain.gni")

gcc_toolchain("test-toolchain"){
   toolprefix = "~/program/hmsdk/sysroots/x86_64-eulersdk-linux/usr/bin/"
   cc = "${toolprefix}aarch64-euler-elf-gcc"
   cxx = "${toolprefix}aarch64-euler-elf-g++"

   gcc_prefix="~/program/hmsdk/sysroots/x86_64-eulersdk-linux/usr/aarch64-hongmeng-musl/bin/"
   readelf = "${gcc_prefix}readelf"
   nm = "${gcc_prefix}nm"
   ar = "${gcc_prefix}ar"
   
   #ld = CXX
   ld="${toolprefix}aarch64-euler-ld"
   
   #Flag that sets endianness and ABI
   #extra_ldflags = "-EB -mabi=64"
   #extra_cppflags = "-EB -mabi=64"

   toolchain_args = {
      current_cpu = "x64"
      current_os = "linux"
      is_clang = false
   }
}

gcc_toolchain("mips64-bundled") {
  toolprefix = rebase_path("//tools/mips_toolchain/bin/mips-mti-linux-gnu-",
                           root_build_dir)
  cc = "${toolprefix}gcc"
  cxx = "${toolprefix}g++"

  readelf = "${toolprefix}readelf"
  nm = "${toolprefix}nm"
  ar = "${toolprefix}ar"
  ld = cxx

  # Flag that sets endianness and ABI
  extra_ldflags = "-EB -mabi=64"
  extra_cppflags = "-EB -mabi=64"

  toolchain_args = {
    current_cpu = "mips64"
    current_os = "linux"
    is_clang = false
  }
}

gcc_toolchain("mips64el-bundled") {
  toolprefix = rebase_path("//tools/mips_toolchain/bin/mips-mti-linux-gnu-",
                           root_build_dir)
  cc = "${toolprefix}gcc"
  cxx = "${toolprefix}g++"

  readelf = "${toolprefix}readelf"
  nm = "${toolprefix}nm"
  ar = "${toolprefix}ar"
  ld = cxx

  # Flag that sets endianness and ABI
  extra_ldflags = "-EL -mabi=64"
  extra_cppflags = "-EL -mabi=64"

  toolchain_args = {
    current_cpu = "mips64el"
    current_os = "linux"
    is_clang = false
  }
}
